// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using auto_pilot.models.Models;

namespace auto_pilot.models.Migrations
{
    [DbContext(typeof(AutoPilotContext))]
    [Migration("20211229073335_modification")]
    partial class modification
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("auto_pilot.models.Models.AgencyCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AgencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("AgencyCompanies");
                });

            modelBuilder.Entity("auto_pilot.models.Models.AgencyUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AgencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AgencyId" }, "IX_AgencyUsers_AgencyId");

                    b.HasIndex(new[] { "UserId" }, "IX_AgencyUsers_UserId");

                    b.HasIndex(new[] { "UserTypeId" }, "IX_AgencyUsers_UserTypeId");

                    b.ToTable("AgencyUsers");
                });

            modelBuilder.Entity("auto_pilot.models.Models.AppSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AgencyId")
                        .HasColumnType("bigint");

                    b.Property<string>("BillingAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClientId")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ClientSecret")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("Low")
                        .HasColumnType("int");

                    b.Property<int?>("Moderate")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Severe")
                        .HasColumnType("int");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Smtp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SMTP");

                    b.Property<string>("Smtpassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SMTPassword");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("auto_pilot.models.Models.AvailableMarket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AgencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("BusinessLineId")
                        .HasColumnType("bigint");

                    b.Property<long>("BusinessTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("InsuranceCompanyId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsFavorite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Wirth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AgencyId" }, "IX_AvailableMarkets_AgencyId");

                    b.HasIndex(new[] { "CreatedById" }, "IX_AvailableMarkets_CreatedById");

                    b.HasIndex(new[] { "ModifiedById" }, "IX_AvailableMarkets_ModifiedById");

                    b.ToTable("AvailableMarkets");
                });

            modelBuilder.Entity("auto_pilot.models.Models.BusinessLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AgencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("BusinessLines");
                });

            modelBuilder.Entity("auto_pilot.models.Models.BusinessType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AgencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("BusinessTypes");
                });

            modelBuilder.Entity("auto_pilot.models.Models.EmailTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<long?>("SourceId")
                        .HasColumnType("bigint");

                    b.Property<string>("TemplateContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateStructure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateSubject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TemplateTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("SourceId");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("auto_pilot.models.Models.Login", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsLoginAllow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_Logins_UserId");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("auto_pilot.models.Models.MarketState", b =>
                {
                    b.Property<long>("MarketId")
                        .HasColumnType("bigint");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("MarketId", "StateId");

                    b.HasIndex("StateId");

                    b.ToTable("MarketStates");
                });

            modelBuilder.Entity("auto_pilot.models.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LevelType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrderNum")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("auto_pilot.models.Models.OAuthSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<string>("ApiURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("client_secret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grant_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OAuthSettings");
                });

            modelBuilder.Entity("auto_pilot.models.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("auto_pilot.models.Models.RoleMenu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("HasAddRight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("HasDeleteRight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("HasEditRight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("HasViewRight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("RoleMenus");
                });

            modelBuilder.Entity("auto_pilot.models.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("auto_pilot.models.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CreatedById" }, "IX_Users_CreatedById");

                    b.HasIndex(new[] { "ModifiedById" }, "IX_Users_ModifiedById");

                    b.HasIndex(new[] { "RoleId" }, "IX_Users_RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("auto_pilot.models.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AgencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("IsArchived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex(new[] { "AgencyId" }, "IX_UserTypes_AgencyId");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("auto_pilot.models.Models.AgencyCompany", b =>
                {
                    b.HasOne("auto_pilot.models.Models.User", "Agency")
                        .WithMany("AgencyCompanyAgencies")
                        .HasForeignKey("AgencyId")
                        .HasConstraintName("FK_Companies_Agency")
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.User", "CreatedBy")
                        .WithMany("AgencyCompanyCreatedBies")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Companies_CreatedBy")
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.User", "ModifiedBy")
                        .WithMany("AgencyCompanyModifiedBies")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Companies_ModifiedBy");

                    b.Navigation("Agency");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("auto_pilot.models.Models.AgencyUser", b =>
                {
                    b.HasOne("auto_pilot.models.Models.User", "Agency")
                        .WithMany("AgencyUserAgencies")
                        .HasForeignKey("AgencyId")
                        .HasConstraintName("FK_Agency_AgencyId")
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.User", "User")
                        .WithMany("AgencyUserUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Users_UserId")
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.UserType", "UserType")
                        .WithMany("AgencyUsers")
                        .HasForeignKey("UserTypeId")
                        .HasConstraintName("FK_Users_UserTypes")
                        .IsRequired();

                    b.Navigation("Agency");

                    b.Navigation("User");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("auto_pilot.models.Models.AppSetting", b =>
                {
                    b.HasOne("auto_pilot.models.Models.User", "Agency")
                        .WithMany("AppSettings")
                        .HasForeignKey("AgencyId")
                        .HasConstraintName("FK_AppSettings_Users")
                        .IsRequired();

                    b.Navigation("Agency");
                });

            modelBuilder.Entity("auto_pilot.models.Models.AvailableMarket", b =>
                {
                    b.HasOne("auto_pilot.models.Models.User", "Agency")
                        .WithMany("AvailableMarketAgencies")
                        .HasForeignKey("AgencyId")
                        .HasConstraintName("FK_Markets_Agency")
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.User", "CreatedBy")
                        .WithMany("AvailableMarketCreatedBies")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Markets_CreatedBy");

                    b.HasOne("auto_pilot.models.Models.User", "ModifiedBy")
                        .WithMany("AvailableMarketModifiedBies")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Markets_ModifyBy");

                    b.Navigation("Agency");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("auto_pilot.models.Models.BusinessLine", b =>
                {
                    b.HasOne("auto_pilot.models.Models.User", "Agency")
                        .WithMany("BusinessLineAgencies")
                        .HasForeignKey("AgencyId")
                        .HasConstraintName("FK_BusinessLines_Agency")
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.User", "CreatedBy")
                        .WithMany("BusinessLineCreatedBies")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_BusinessLines_CreatedBy")
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.User", "ModifiedBy")
                        .WithMany("BusinessLineModifiedBies")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_BusinessLines_ModifiedBy");

                    b.Navigation("Agency");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("auto_pilot.models.Models.BusinessType", b =>
                {
                    b.HasOne("auto_pilot.models.Models.User", "Agency")
                        .WithMany("BusinessTypeAgencies")
                        .HasForeignKey("AgencyId")
                        .HasConstraintName("FK_BusinessTypes_Agency")
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.User", "CreatedBy")
                        .WithMany("BusinessTypeCreatedBies")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_BusinessTypes_CreatedBy")
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.User", "ModifiedBy")
                        .WithMany("BusinessTypeModifiedBies")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_BusinessTypes_ModifiedBy");

                    b.Navigation("Agency");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("auto_pilot.models.Models.EmailTemplate", b =>
                {
                    b.HasOne("auto_pilot.models.Models.User", "CreatedBy")
                        .WithMany("EmailTemplateCreatedBies")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_EmailTemplates_Source")
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.User", "ModifiedBy")
                        .WithMany("EmailTemplateModifiedBies")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_EmailTemplates_ModifiedBy");

                    b.HasOne("auto_pilot.models.Models.User", "Source")
                        .WithMany("EmailTemplateSources")
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_EmailTemplates_CreatedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("auto_pilot.models.Models.Login", b =>
                {
                    b.HasOne("auto_pilot.models.Models.User", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Logins_Users")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("auto_pilot.models.Models.MarketState", b =>
                {
                    b.HasOne("auto_pilot.models.Models.AvailableMarket", "Market")
                        .WithMany("MarketStates")
                        .HasForeignKey("MarketId")
                        .HasConstraintName("FK_Markets_MarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.State", "State")
                        .WithMany("MarketStates")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_States_StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Market");

                    b.Navigation("State");
                });

            modelBuilder.Entity("auto_pilot.models.Models.RoleMenu", b =>
                {
                    b.HasOne("auto_pilot.models.Models.Menu", "Menu")
                        .WithMany("RoleMenus")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_RoleMenus_Menus")
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.UserType", "UserType")
                        .WithMany("RoleMenus")
                        .HasForeignKey("UserTypeId")
                        .HasConstraintName("FK_RoleMenus_UserTypes")
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("auto_pilot.models.Models.User", b =>
                {
                    b.HasOne("auto_pilot.models.Models.User", "CreatedBy")
                        .WithMany("InverseCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Users_CreatedBy");

                    b.HasOne("auto_pilot.models.Models.User", "ModifiedBy")
                        .WithMany("InverseModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Users_ModifiedBy");

                    b.HasOne("auto_pilot.models.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Users_Roles");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("auto_pilot.models.Models.UserType", b =>
                {
                    b.HasOne("auto_pilot.models.Models.User", "Agency")
                        .WithMany("UserTypeAgencies")
                        .HasForeignKey("AgencyId")
                        .HasConstraintName("FK_UserTypes_Agency")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.User", "CreatedBy")
                        .WithMany("UserTypeCreatedBies")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_UserTypes_CreatedBy")
                        .IsRequired();

                    b.HasOne("auto_pilot.models.Models.User", "ModifiedBy")
                        .WithMany("UserTypeModifiedBies")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_UserTypes_ModifiedBy");

                    b.Navigation("Agency");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("auto_pilot.models.Models.AvailableMarket", b =>
                {
                    b.Navigation("MarketStates");
                });

            modelBuilder.Entity("auto_pilot.models.Models.Menu", b =>
                {
                    b.Navigation("RoleMenus");
                });

            modelBuilder.Entity("auto_pilot.models.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("auto_pilot.models.Models.State", b =>
                {
                    b.Navigation("MarketStates");
                });

            modelBuilder.Entity("auto_pilot.models.Models.User", b =>
                {
                    b.Navigation("AgencyCompanyAgencies");

                    b.Navigation("AgencyCompanyCreatedBies");

                    b.Navigation("AgencyCompanyModifiedBies");

                    b.Navigation("AgencyUserAgencies");

                    b.Navigation("AgencyUserUsers");

                    b.Navigation("AppSettings");

                    b.Navigation("AvailableMarketAgencies");

                    b.Navigation("AvailableMarketCreatedBies");

                    b.Navigation("AvailableMarketModifiedBies");

                    b.Navigation("BusinessLineAgencies");

                    b.Navigation("BusinessLineCreatedBies");

                    b.Navigation("BusinessLineModifiedBies");

                    b.Navigation("BusinessTypeAgencies");

                    b.Navigation("BusinessTypeCreatedBies");

                    b.Navigation("BusinessTypeModifiedBies");

                    b.Navigation("EmailTemplateCreatedBies");

                    b.Navigation("EmailTemplateModifiedBies");

                    b.Navigation("EmailTemplateSources");

                    b.Navigation("InverseCreatedBy");

                    b.Navigation("InverseModifiedBy");

                    b.Navigation("Logins");

                    b.Navigation("UserTypeAgencies");

                    b.Navigation("UserTypeCreatedBies");

                    b.Navigation("UserTypeModifiedBies");
                });

            modelBuilder.Entity("auto_pilot.models.Models.UserType", b =>
                {
                    b.Navigation("AgencyUsers");

                    b.Navigation("RoleMenus");
                });
#pragma warning restore 612, 618
        }
    }
}
